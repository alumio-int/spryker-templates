{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"scheduler-entry","identifier":"akeneo-fetch-and-check-attributes","name":"Akeneo - Fetch and check Attributes","description":"This will check families to get the Akeneo Axes attribute that will become a Super Attribute in Spryker.\n\nThen it will fetch the Attributes data from Akeneo.","object":{"parameters":{"job":[{"prototype":"run-incoming","parameters":{"incoming":"akeneo-fetch-families"}},{"prototype":"run-incoming","parameters":{"incoming":"akeneo-fetch-attributes"}}],"handlers":[],"priority":2,"expression":"*/5 * * * *"}},"owner":null,"disabled":true}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"incoming-configuration","identifier":"akeneo-fetch-families","name":"Akeneo - Fetch - Families","description":"This incoming is created to get family axes in Akeneo to determine a super attribute in Spryker.\n\nThe family axes exists in the family variants but Akeneo require code in the end point that is why we fetch the family first to get the code.","object":{"parameters":{"subscriber":{"prototype":"http-subscriber","parameters":{"client":"akeneo-http-client","request":{"uri":"/api/rest/v1/families","payload":[],"plugins":[],"payloadType":"data","authentications":[]},"pagination":{"prototype":"next","parameters":{"pattern":"_links.next"}},"deserializer":{"prototype":"json","parameters":{"pattern":"_embedded.items","readMethod":"wholeFile"}}}},"transformers":["akeneo-fetch-and-update-storage-family-variants-axes"]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"http-client","identifier":"akeneo-http-client","name":"Akeneo - HTTP Client","description":"","object":{"prototype":"akeneo-http-client-v2","parameters":{"key":"", "baseUri":"${AKENEO_BASE_URL}","clientId":"${AKENEO_CLIENT_ID}","password":"${AKENEO_PASSWORD}","username":"${AKENEO_USERNAME}","clientSecret":"${AKENEO_CLIENT_SECRET}"}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-fetch-and-update-storage-family-variants-axes","name":"Akeneo - Fetch and update storage - Family Variants - Axes","description":"This transformer is a custom pagination HTTP call to get family variants.\n\nIt will then be save the family axes in the storage Akeneo - Family Variants - Axes.","object":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"limit","value":100,"mappers":[]},{"key":"endpoint","value":"/api/rest/v1/families/&{code}/variants","mappers":[]}]}},{"meta":[],"prototype":"merger","parameters":{"template":{"data":"&{_embedded.items || `[]`}","total":"&{items_count || `0`}"},"transformer":{"meta":[],"prototype":"http-transformer","parameters":{"client":"akeneo-http-client","request":{"uri":"&{endpoint}","payload":{"limit":"&{limit}","with_count":"true"},"plugins":[],"payloadType":"data","authentications":[]}}}}}]}},{"meta":{"name":"Build Pagination"},"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"total_page","value":["&{total}","&{limit}"],"mappers":[{"prototype":"operator","parameters":{"operator":"division"}},{"prototype":"cast-int","parameters":[]}]},{"key":"newData","value":"&{total_page}","mappers":[{"prototype":"cast-int","parameters":[]}]}]}},{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"list-fill","parameters":{"start":0,"length":"&{@}"}}],"accessor":{"prototype":"key","parameters":{"keys":["newData"]}}}},{"meta":[],"prototype":"accessor-move","parameters":{"source":{"prototype":"key","parameters":{"keys":[],"root":"newData"}},"destination":{"prototype":"structure","parameters":{"key":"index","keys":[],"root":"newData","value":"value"}},"stripEnclosures":true}},{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"list-values","parameters":[]}],"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"newData"}}}},{"meta":[],"prototype":"recursively-copy-values-to-children","parameters":{"mergeTemplate":{"limit":"&{limit}","endpoint":"&{endpoint}"},"childrenPattern":"newData.*"}}]}}]}},{"meta":{"name":"Pagination - Execute next page"},"prototype":"node","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"newData.*"}},"nodeFilters":[],"nodeTransformers":[{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"cast-int","parameters":[]},{"prototype":"prepared-operator","parameters":{"left":null,"right":[2],"operator":"addition"}}],"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"index"}}}},{"meta":[],"prototype":"merger","parameters":{"template":{"data":"&{_embedded.items || `[]`}"},"transformer":{"meta":[],"prototype":"http-transformer","parameters":{"client":"akeneo-http-client","request":{"uri":"&{endpoint}","payload":{"page":"&{index}","limit":"&{limit}","with_count":"true"},"plugins":[{"prototype":"logger","parameters":{"formatter":"simple"}}],"payloadType":"data","authentications":[]}}}}},{"meta":[],"prototype":"key-filter","parameters":{"accessor":{"prototype":"key","parameters":{"keys":["limit","index","total"]}},"conditions":[]}}]}},{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"newArray","value":["&{notFound || `[]`}","&{notFound || `[]`}"],"mappers":[]}]}},{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"newData.*.data.*","conditions":[],"replacement":"newArray.$1.$2"}},{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"operator","parameters":{"operator":"array-merge"}}],"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"newArray"}}}},{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"results","value":["&{data}","&{newArray}"],"mappers":[{"prototype":"operator","parameters":{"operator":"array-merge"}}]}]}},{"meta":[],"prototype":"key-filter","parameters":{"accessor":{"prototype":"key","parameters":{"keys":["data","newArray"]}},"conditions":[]}}]}},{"meta":[],"prototype":"node","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"results.*.variant_attribute_sets.*"}},"nodeFilters":[],"nodeTransformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"isSuper","value":true,"mappers":[]}]}},{"meta":[],"prototype":"storage-save-entity-in-storage","parameters":{"source":"isSuper","storage":"akeneo-family-variants-axes","storageKey":"&{axes[0]}"}}]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"storage","identifier":"akeneo-family-variants-axes","name":"Akeneo - Family Variants - Axes","description":"","object":{"parameters":{"path":"akeneo-family-variants-axes-01JPS9G7N8VK2KBWMKHSS50B3R","logger":{"parameters":{"actions":[]}}}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"incoming-configuration","identifier":"akeneo-fetch-attributes","name":"Akeneo - Fetch - Attributes","description":"","object":{"parameters":{"entityType":"base-attribute","subscriber":{"prototype":"http-subscriber","parameters":{"client":"akeneo-http-client","request":{"uri":"/api/rest/v1/attributes?limit=100","payload":[],"plugins":[],"payloadType":"data","authentications":[]},"pagination":{"prototype":"next","parameters":{"pattern":"_links.next","pageLimit":1000}},"deserializer":{"prototype":"json","parameters":{"pattern":"_embedded.items","readMethod":"wholeFile"}}}},"transformers":["akeneo-prepare-convert-labels-to-localizations","akeneo-check-and-fetch-attribute-options","akeneo-convert-attribute-to-alumio-base-attribute","akeneo-map-type-code-to-spryker-code","akeneo-check-axes-is-super-attribute","akeneo-filter-attributes"]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-prepare-convert-labels-to-localizations","name":"Akeneo - Prepare convert - Labels - To localizations","description":"","object":{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"accessor-move","parameters":{"source":{"prototype":"key","parameters":{"keys":[],"root":"labels"}},"destination":{"prototype":"structure","parameters":{"key":"localeCode","keys":[],"root":"localizations","value":"translation"}},"stripEnclosures":true}},{"meta":[],"prototype":"value-remover","parameters":{"patterns":[{"key":"labels"}]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-check-and-fetch-attribute-options","name":"Akeneo  - Check and fetch - Attribute options","description":"This transformer is a custom pagination HTTP call to get attribute options.","object":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"type"}},"conditions":[{"prototype":"equals","parameters":{"value":"pim_catalog_boolean"}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"options","value":[{"code":"yes","localizations":[{"localeCode":"de_DE","translation":"Ja"},{"localeCode":"en_US","translation":"Yes"}]},{"code":"no","localizations":[{"localeCode":"de_DE","translation":"Nein"},{"localeCode":"en_US","translation":"No"}]}],"mappers":[]}]}}],"elseTransformers":[{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"type"}},"conditions":[{"prototype":"one-of","parameters":{"value":["pim_catalog_simpleselect","pim_catalog_multiselect"]}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"list-transformer-wrapper","parameters":{"transformers":["akeneo-fetch-and-convert-attribute-options-to-alumio-base-attribute-options"]}}],"elseTransformers":[]}}]}}]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-fetch-and-convert-attribute-options-to-alumio-base-attribute-options","name":"Akeneo - Fetch and convert - Attribute Options - To Alumio Base Attribute Options","description":"","object":{"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"limit","value":100,"mappers":[]},{"key":"endpoint","value":"/api/rest/v1/attributes/&{code}/options","mappers":[]}]}},{"meta":[],"prototype":"merger","parameters":{"template":{"data":"&{_embedded.items || `[]`}","total":"&{items_count || `0`}"},"transformer":{"meta":[],"prototype":"http-transformer","parameters":{"client":"akeneo-http-client","request":{"uri":"&{endpoint}","payload":{"limit":"&{limit}","with_count":"true"},"plugins":[],"payloadType":"data","authentications":[]}}}}}]}},{"meta":{"name":"Build Pagination"},"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"total_page","value":["&{total}","&{limit}"],"mappers":[{"prototype":"operator","parameters":{"operator":"division"}},{"prototype":"cast-int","parameters":[]}]},{"key":"newData","value":"&{total_page}","mappers":[{"prototype":"cast-int","parameters":[]}]}]}},{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"list-fill","parameters":{"start":0,"length":"&{@}"}}],"accessor":{"prototype":"key","parameters":{"keys":["newData"]}}}},{"meta":[],"prototype":"accessor-move","parameters":{"source":{"prototype":"key","parameters":{"keys":[],"root":"newData"}},"destination":{"prototype":"structure","parameters":{"key":"index","keys":[],"root":"newData","value":"value"}},"stripEnclosures":true}},{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"list-values","parameters":[]}],"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"newData"}}}},{"meta":[],"prototype":"recursively-copy-values-to-children","parameters":{"mergeTemplate":{"limit":"&{limit}","endpoint":"&{endpoint}"},"childrenPattern":"newData.*"}}]}}]}},{"meta":{"name":"Pagination - Execute next page"},"prototype":"node","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"newData.*"}},"nodeFilters":[],"nodeTransformers":[{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"cast-int","parameters":[]},{"prototype":"prepared-operator","parameters":{"left":null,"right":[2],"operator":"addition"}}],"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"index"}}}},{"meta":[],"prototype":"merger","parameters":{"template":{"data":"&{_embedded.items || `[]`}"},"transformer":{"meta":[],"prototype":"http-transformer","parameters":{"client":"akeneo-http-client","request":{"uri":"&{endpoint}","payload":{"page":"&{index}","limit":"&{limit}","with_count":"true"},"plugins":[{"prototype":"logger","parameters":{"formatter":"simple"}}],"payloadType":"data","authentications":[]}}}}},{"meta":[],"prototype":"key-filter","parameters":{"accessor":{"prototype":"key","parameters":{"keys":["limit","index","total"]}},"conditions":[]}}]}},{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"newArray","value":["&{notFound || `[]`}","&{notFound || `[]`}"],"mappers":[]}]}},{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"newData.*.data.*","conditions":[],"replacement":"newArray.$1.$2"}},{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"operator","parameters":{"operator":"array-merge"}}],"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"newArray"}}}},{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"options","value":["&{data}","&{newArray}"],"mappers":[{"prototype":"operator","parameters":{"operator":"array-merge"}}]}]}},{"meta":[],"prototype":"key-filter","parameters":{"accessor":{"prototype":"key","parameters":{"keys":["data","newArray"]}},"conditions":[]}}]}},{"meta":[],"prototype":"node","parameters":{"accessor":{"prototype":"key","parameters":{"keys":[],"root":"options"}},"nodeFilters":[],"nodeTransformers":[{"meta":[],"prototype":"list-transformer-wrapper","parameters":{"transformers":["akeneo-prepare-convert-labels-to-localizations","akeneo-convert-attribute-option-alumio-base-attribute-option"]}}]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-convert-attribute-option-alumio-base-attribute-option","name":"Akeneo - Convert - Attribute Option - Alumio Base Attribute Option","description":"","object":{"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"key-filter","parameters":{"accessor":{"prototype":"key","parameters":{"keys":[]}},"conditions":[{"prototype":"not-one-of","parameters":{"value":["identifier","code","localizations"]}}]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-convert-attribute-to-alumio-base-attribute","name":"Akeneo - Convert - Attribute - To Alumio Base Attribute","description":"This is the transformer to convert the whole attribute data into Alumio Base data.","object":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"type","conditions":[],"replacement":"typeCode"}},{"meta":[],"prototype":"key-filter","parameters":{"accessor":{"prototype":"key","parameters":{"keys":[]}},"conditions":[{"prototype":"not-one-of","parameters":{"value":["identifier","isSuper","code","typeCode","options","localizations"]}}]}}]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-map-type-code-to-spryker-code","name":"Akeneo - Map - Type code - To Spryker Code","description":"This transformer use to map the type code in Akeneo into a Spryker one.","object":{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"typeCode"}},"conditions":[{"prototype":"one-of","parameters":{"value":["pim_catalog_boolean"]}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"typeCode","value":"select","mappers":[]}]}}],"elseTransformers":[{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"string-replace","parameters":{"search":"pim_catalog_"}}],"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"typeCode"}}}}]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-check-axes-is-super-attribute","name":"Akeneo - Check - Axes - Is Super Attribute","description":"This transformer checks the super attribute using storage Akeneo - Family Variants - Axes that created by the Incoming Akeneo - Fetch - Families.","object":{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"isSuper","value":false,"mappers":[]}]}},{"meta":[],"prototype":"storage-get-entity-from-storage","parameters":{"storage":"akeneo-family-variants-axes","storageKey":"&{code}","destination":"isSuper"}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"akeneo-filter-attributes","name":"Akeneo - Filter - Attribute","description":"We use this transformer to filter previously created into task attributes to avoid duplication.","object":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"type-setter","parameters":{"entityType":"base-attribute"}},{"meta":[],"prototype":"storage-filter-stored-entity","parameters":{"storage":"akeneo-filter-attributes","addEntityToStorage":true}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"storage","identifier":"akeneo-filter-attributes","name":"Akeneo - Filter - Attributes","description":"","object":{"parameters":{"path":"akeneo-filter-attributes-01JPS9G7NBAX7X3MX1HKPDVV0F","logger":{"parameters":{"actions":[]}}}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"scheduler-entry","identifier":"spryker-send-attributes","name":"Spryker - Send Attributes","description":"This scheduler will fetch attributes data from Spryker then will send the attributes data into Spryker base on the task created for the Route.","object":{"parameters":{"job":[{"prototype":"run-incoming","parameters":{"incoming":"spryker-fetch-attributes"}},{"prototype":"run-outgoing","parameters":{"route":"akeneo-synchronize-atrributes-to-spryker","numTasks":20}}],"handlers":[],"priority":2,"expression":"*/5 * * * *"}},"owner":null,"disabled":true}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"incoming-configuration","identifier":"spryker-fetch-attributes","name":"Spryker - Fetch - Attributes","description":"Before we send attributes into Spryker system, we need to know first which attributes are already exists in the Spryker System. So, this Incoming is intended to fetch the Categories data in Spryker System and save them with transformer \"Spryker - Update storage - Attributes\". The result of this Incoming would not be created into Task but will be saved into storage name \"Spryker - Attributes\".","object":{"parameters":{"subscriber":{"prototype":"http-subscriber","parameters":{"client":"spryker-backoffice-glue","request":{"uri":"/product-attributes","payload":[],"plugins":[],"serializer":{"prototype":"json","parameters":[]},"payloadType":"data","authentications":[]},"deserializer":{"prototype":"json","parameters":{"pattern":"data","readMethod":"wholeFile"}}}},"transformers":["spryker-update-storage-attributes"]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"http-client","identifier":"spryker-backoffice-glue","name":"Spryker - Backoffice Glue","description":"","object":{"prototype":"alumio-spryker-dynamic-data-exchange-http-client-v2","parameters":{"key":"01JH4QM3K95013ZFMCBFVT5D63","baseUrl":"${SPRYKER_BACKOFFICE_GLUE_BASE_URI}","advanced":{"client":"default"},"password":"${SPRYKER_BACKOFFICE_GLUE_PASSWORD}","username":"${SPRYKER_BACKOFFICE_GLUE_USERNAME}"}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"http-client","identifier":"default","name":"Default client","object":{"parameters":{"plugins":[{"prototype":"logger","parameters":{"formatter":"long"}}]}}}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"spryker-update-storage-attributes","name":"Spryker - Update storage - Attributes","description":"","object":{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"storage-save-entity-in-storage","parameters":{"storage":"spryker-attributes","storageKey":"&{id}"}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"storage","identifier":"spryker-attributes","name":"Spryker - Attributes","description":"","object":{"parameters":{"path":"spryker-attributes-01JPS9G7NRW6ARA2CVCNKKJ6XY","logger":{"parameters":{"actions":[]}}}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"route-configuration","identifier":"akeneo-synchronize-atrributes-to-spryker","name":"Akeneo Synchronize Atrributes to Spryker","description":"","object":{"parameters":{"incoming":"akeneo-fetch-attributes","outgoing":"spryker-send-attribute","realtime":false,"transformers":[],"waitingStatus":false,"parallelExecution":[]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"outgoing-configuration","identifier":"spryker-send-attribute","name":"Spryker - Send - Attribute","description":"","object":{"parameters":{"publisher":{"prototype":"no-action-publisher","parameters":[]},"transformers":["spryker-prepare-convert-check-type-code-for-metric-and-change-into-text","spryker-convert-attribute-from-alumio-base","spryker-filter-filter-all-localename-for-enus-and-dede","spryker-prepare-send-attribute-check-localized-keys-translation-for-system-and-add-period","spryker-check-and-send-attribute","spryker-update-storage-attributes"]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"spryker-prepare-convert-check-type-code-for-metric-and-change-into-text","name":"Spryker - Prepare Convert - Check type code for metric and change into text","description":"We found out that type metric is not suitable currently in Spryker so we change it into text instead.","object":{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"typeCode"}},"conditions":[{"prototype":"equals","parameters":{"value":"metric"}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"typeCode","value":"text","mappers":[]}]}}],"elseTransformers":[]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"spryker-convert-attribute-from-alumio-base","name":"Spryker - Convert - Attribute - From Alumio Base","description":"","object":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"code","conditions":[],"replacement":"data.id"}},{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"data.type","value":"product-attributes","mappers":[]},{"key":"data.attributes","value":{"key":"&{data.id}","allowInput":true},"mappers":[]}]}},{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"isSuper","conditions":[],"replacement":"data.attributes.isSuper"}},{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"typeCode"}},"conditions":[{"prototype":"one-of","parameters":{"value":["multiselect","select"]}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"data.attributes.allowInput","value":false,"mappers":[]}]}}],"elseTransformers":[]}},{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"typeCode","conditions":[],"replacement":"data.attributes.inputType"}},{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"localizations","conditions":[],"replacement":"data.attributes.localizedKeys"}},{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"options","conditions":[],"replacement":"data.attributes.values"}}]}},{"meta":[],"prototype":"node","parameters":{"accessor":{"prototype":"key","parameters":{"keys":[],"root":"data.attributes.localizedKeys"}},"nodeFilters":[],"nodeTransformers":[{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"localeCode","conditions":[],"replacement":"localeName"}}]}},{"meta":[],"prototype":"node","parameters":{"accessor":{"prototype":"key","parameters":{"keys":[],"root":"data.attributes.values"}},"nodeFilters":[],"nodeTransformers":[{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"code","conditions":[],"replacement":"value"}},{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"localizations","conditions":[],"replacement":"localizedValues"}}]}},{"meta":[],"prototype":"node","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"data.attributes.values.*.localizedValues.*"}},"nodeFilters":[],"nodeTransformers":[{"meta":[],"prototype":"pattern-move","parameters":{"pattern":"localeCode","conditions":[],"replacement":"localeName"}}]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"spryker-filter-filter-all-localename-for-enus-and-dede","name":"Spryker - Filter Attribute - Filter locale name by locale","description":"","object":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"node","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"data.attributes.localizedKeys.*"}},"nodeFilters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"localeName"}},"conditions":[{"prototype":"one-of","parameters":{"value":["en_US","de_DE"]}}]}}],"nodeTransformers":[]}},{"meta":[],"prototype":"node","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"data.attributes.values.*.localizedValues.*"}},"nodeFilters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"localeName"}},"conditions":[{"prototype":"one-of","parameters":{"value":["en_US","de_DE"]}}]}}],"nodeTransformers":[]}},{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"list-values","parameters":[]}],"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"data.attributes.localizedKeys"}}}},{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"list-values","parameters":[]}],"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"data.attributes.values.*.localizedValues"}}}}]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"spryker-prepare-send-attribute-check-localized-keys-translation-for-system-and-add-period","name":"Spryker - Prepare Send Attribute - Check localized keys translation for system and add period","description":"There is a bug in Spryker that will reject payload with locale name contain the word \"System\", this will add period \".\" after the word \"System\" to avoid the bug.","object":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"node","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"data.attributes.localizedKeys.*"}},"nodeFilters":[],"nodeTransformers":[{"meta":[],"prototype":"value-mapper","parameters":{"mappers":[{"prototype":"string-replace","parameters":{"search":"system","replace":"system."}},{"prototype":"string-replace","parameters":{"search":"System","replace":"System."}},{"prototype":"string-replace","parameters":{"search":"SYSTEM","replace":"SYSTEM."}}],"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"translation"}}}}]}}]}},"owner":null,"disabled":false}
{"$schema":"https://di.schema.alumio.com/register.configuration.json","type":"list-transformer","identifier":"spryker-check-and-send-attribute","name":"Spryker - Check and send - Attribute","description":"","object":{"meta":[],"prototype":"chain","parameters":{"transformers":[{"meta":[],"prototype":"data","parameters":{"filters":[],"transformers":[{"meta":[],"prototype":"value-setter","parameters":{"configurations":[{"key":"check","value":null,"mappers":[]}]}},{"meta":[],"prototype":"storage-get-entity-from-storage","parameters":{"storage":"spryker-attributes","storageKey":"&{data.id}","destination":"check"}},{"meta":[],"prototype":"conditional","parameters":{"filters":[{"prototype":"value-condition-v2","parameters":{"accessor":{"prototype":"pattern","parameters":{"keys":[],"pattern":"check"}},"conditions":[{"prototype":"equals","parameters":{"value":null}}]}}],"elseCases":[],"transformers":[{"meta":[],"prototype":"value-remover","parameters":{"patterns":[{"key":"check"}]}},{"meta":[],"prototype":"http-transformer","parameters":{"client":"spryker-backoffice-glue","request":{"uri":"/product-attributes","method":"POST","payload":"&{@}","plugins":[],"payloadType":"data","authentications":[]}}}],"elseTransformers":[{"meta":[],"prototype":"value-remover","parameters":{"patterns":[{"key":"check"}]}},{"meta":[],"prototype":"http-transformer","parameters":{"client":"spryker-backoffice-glue","request":{"uri":"/product-attributes/&{data.id}","method":"PATCH","payload":"&{@}","plugins":[],"payloadType":"data","authentications":[]}}}]}},{"meta":[],"prototype":"accessor-move","parameters":{"source":{"prototype":"key","parameters":{"keys":[],"root":"data"}},"destination":{"prototype":"pattern","parameters":{"keys":[]}},"stripEnclosures":true}},{"meta":[],"prototype":"value-remover","parameters":{"patterns":[{"key":"data"}]}}]}}]}},"owner":null,"disabled":false}
